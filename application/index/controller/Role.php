<?php
/**
 * Created by PhpStorm.
 * User: 刘进义
 * Contact: ddf-128@163.com
 * Wechat:dd283681008
 * Date: 2018/9/17 21:56
 */


namespace app\index\controller;


use app\index\Model\RoleModel;
use think\Controller;
use think\Db;
use think\Request;
use think\Validate;

class Role extends Home
{
    protected $role;
    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
        $this->role = new RoleModel();
    }

    /**角色主页
     * @return mixed
     */
    public function index()
    {
        return $this->fetch();
    }

    /**角色数据列表
     * @param Request $request
     * @return array
     */
    public function lists(Request $request)
    {
        $map = [];
        $page=$request->param('page/d');
        $limit=$request->param('rows/d');
        $page =$page-1;
        if($page>0){
            $page=$page*$limit;
        }
        //$map['status'] = ['eq',1];
        $count = $this->role->where($map)->limit($page,$limit)->order('id desc')->count('id');
        $list = $this->role->where($map)->limit($page,$limit)->order('id desc')->select();

        $result= [
            'rows'=>$list,
            'total'=>$count
        ];
        return $result;
    }

    /**角色添加页面
     * @return mixed
     */
    public function addRole()
    {

        return $this->fetch('addRole');
    }

    /**添加角色操作
     * @param Request $request
     * @return string
     */
    public function insertRole(Request $request)
    {
        $data = $request->param();
        //验证
        $rule = [
            ['title','require|unique:auth_group','请输入角色名称|已存在相同角色名称']
        ];

        $validate = new Validate($rule);
        $valResult   = $validate->check($data);
        if(!$valResult){
            return json_encode(['code'=>0,'msg'=>$validate->getError()]);
        }

        $sldata=array(
            'title'=>$data['title'],
            'status'=>$data['status'],
            'addtime'=>time(),
        );
        $result = $this->role->save($sldata);
        if($result!==false){
            return json_encode(['code'=>1,'msg'=>'角色添加成功']);
        }else{
            return json_encode(['code'=>0,'msg'=>'角色添加失败']);
        }
    }

    /**修改角色页面
     * @param Request $request
     * @return mixed
     * @throws \think\db\exception\DataNotFoundException
     * @throws \think\db\exception\ModelNotFoundException
     * @throws \think\exception\DbException
     */
    public function editRole(Request $request)
    {
        $gid = $request->param('gid');
        $info = Db::name('auth_group')->where('id',$gid)->find();
        $this->assign('info',$info);
        return $this->fetch('editRole');
    }

    /**修改角色操作
     * @param Request $request
     * @return string
     */
    public function updateRole(Request $request)
    {
        $data = $request->param();

        //判断是否是超级管理员
        $is_cj = Db::name('auth_group')->where('id',$data['id'])->value('short');
        if($is_cj == 'cj'){
            return json_encode(['code'=>0,'msg'=>'系统管理员不得修改']);
        }

        //验证
        $rule = [
            ['title','require|unique:auth_group','请输入角色名称|已存在相同角色名称']
        ];

        $validate = new Validate($rule);
        $valResult   = $validate->check($data);
        if(!$valResult){
            return json_encode(['code'=>0,'msg'=>$validate->getError()]);
        }


        $sldata=array(
            'id'=>$data['id'],
            'title'=>$data['title'],
            'status'=>$data['status'],
            'addtime'=>time(),
        );
        $result = $this->role->isUpdate(true)->save($sldata);
        if($result!==false){
            return json_encode(['code'=>1,'msg'=>'角色修改成功']);
        }else{
            return json_encode(['code'=>0,'msg'=>'角色修改失败']);
        }
    }

    /**角色状态设置
     * @param Request $request
     * @return string
     */
    public function setStatus(Request $request)
    {
        $where='';
        $ids = $request->param('arr/a');
        $ty = $request->param('ty','0');

        if(in_array('4',$ids)){
            return json_encode(['code'=>0,'msg'=>"系统管理员不得修改<br/>不要勾选医诊通管理员"]);
        }

        if(is_array($ids))
        {
            $where = 'id in('.implode(',',$ids).')';

        }
        if($ty ==1){   //启用
            $result = $this->role->where($where)->setField('status',1);
            $msg = '用户组启用成功';
        }else{   //停用
            $result = $this->role->where($where)->setField('status',0);
            $msg = '用户组停用成功';
        }

        if($result!==false){
            return json_encode(['code'=>1,'msg'=>$msg]);
        }else{
            return json_encode(['code'=>0,'msg'=>$msg]);
        }

    }
}